@import 'styles';

:host {
  display: inline-block;
  position: relative;
}

// text
.label {
  color: map-get($color, medium);
  font-family: $font-stack;
  padding-left: map-get($spacing, 32);

  &--bold {
    font-weight: map-get($font-weight, bold);
  }
}

// custom checkbox
.element {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 0;
  height: 20px;
  width: 20px;
  border: map-get($border, thin) solid map-get($color, medium);
  user-select: none;
  border-radius: map-get($border, radius);

  // custom checkmark
  &::after {
    content: "";
    position: absolute;
    display: none;
  }
}

// hide the default checkbox input
.input {
  display: none;
  position: absolute;
  left: -100vh;
  opacity: 0;
}

// make the label text brighter when selected
.input:indeterminate ~ .label,
.input:checked ~ .label {
  color: map-get($color, lightest);
}

// style the custom checkbox when the default checkbox input is indeterminate/checked
.input:indeterminate ~ .element,
.input:checked ~ .element {
  border-color: map-get($color, lightest);
}

// style the custom checkbox when the default checkbox input is indeterminate
.input:indeterminate ~ .element::after {
  display: block;
  left: 50%;
  top: 50%;
  width: 8px;
  transform: translate(-50%, -50%);
  border-top: map-get($border, thin) solid map-get($color, lightest);
}

// style the custom checkmark when the default checkbox input is checked
.input:checked ~ .element::after {
  display: block;
  left: 4px;
  top: 0px;
  width: 8px;
  height: 13px;
  border: solid map-get($color, lightest);
  border-width: 0 map-get($border, thin) map-get($border, thin) 0;
  transform: rotate(45deg);
}

// the <label> element of the checkbox is used as the container
.checkbox {
  display: inline-block;

  &--inverted {
    .input:indeterminate ~ .element,
    .input:checked ~ .element {
      background: map-get($color, lightest);
    }

    .input:indeterminate ~ .element::after,
    .input:checked ~ .element::after {
      border-color: map-get($color, darkest);
    }
  }
}
